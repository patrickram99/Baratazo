generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  firstName     String
  lastName      String
  password      String
  phoneNumber   String
  country       String
  state         String
  address       String
  city          String
  postalCode    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orders        Order[]
  reviews       Review[]
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String
  description     String
  price           Float
  stockQuantity   Int
  category        String
  brand           String
  model           String
  specifications  Json
  imageUrl        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  orderItems      OrderItem[]
  reviews         Review[]
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int
  status          OrderStatus
  totalAmount     Float
  shippingAddress String
  paymentMethod   String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            User        @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Promotion {
  id                Int      @id @default(autoincrement())
  name              String
  description       String
  discountPercentage Float
  startDate         DateTime
  endDate           DateTime
  applicableProducts String[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}